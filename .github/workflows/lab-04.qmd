---
title: "Lab-4"
format:
  html:
    embed-resources: true
editor: visual
---

## Lab 4

### **1. Read in the data**

First download and then read in with `data.table::fread()`

```{r}
library(R.utils)
library(purrr)
if (!file.exists("met_all.gz"))
  download.file(
    url = "https://raw.githubusercontent.com/USCbiostats/data-science-data/master/02_met/met_all.gz",
    destfile = "met_all.gz",
    method   = "libcurl",
    timeout  = 60
    )
met <- data.table::fread("met_all.gz")

```

### **2. Prepare the data**

-   Remove temperatures less than -17C

-   Make sure there are no missing data in the key variables coded as 9999, 999, etc

-   Generate a date variable using the functions `as.Date()` (hint: You will need the following to create a date `paste(year, month, day, sep = "-")`).

-   Using the `data.table::week` function, keep the observations of the first week of the month.

-   Compute the mean by station of the variables `temp`, `rh`, `wind.sp`, `vis.dist`, `dew.point`, `lat`, `lon`, and `elev`.

-   Create a region variable for NW, SW, NE, SE based on lon = -98.00 and lat = 39.71 degrees

-   Create a categorical variable for elevation as in the lecture slides

```{r}
library(tidyverse)
library(dplyr)
library(ggplot2)
library(data.table)
newmet <- subset(met, temp > -17)
newmet[newmet$elev==9999] <- NA
newmet$date <- as.Date(paste(newmet$year, newmet$month, newmet$day, sep = "-"))
met_avg <- met[,.(
  temp     = mean(temp,na.rm=TRUE),
  rh       = mean(rh,na.rm=TRUE),
  wind.sp  = mean(wind.sp,na.rm=TRUE),
  vis.dist = mean(vis.dist,na.rm=TRUE),
  dew.point = mean(dew.point, na.rm=TRUE),
  lat      = mean(lat),
  lon      = mean(lon), 
  elev     = mean(elev,na.rm=TRUE)
), by=c("USAFID", "day")]
met_avg[, region   := fifelse(lon > -98, "east", "west")]
met_avg[, elev_cat := fifelse(elev > 252, "high", "low")]
met_avg[, vis_cat  := cut(
  x      = vis.dist,
  breaks = c(0, 1000, 6000, 10000, Inf),
  labels = c("fog", "mist", "haze", "clear"),
  right  = FALSE
)]
```

### **3. Use `geom_violin` to examine the wind speed and dew point by region**

You saw how to use `geom_boxplot` in class. Try using `geom_violin` instead (take a look at the help). (hint: You will need to set the `x` aesthetic to 1)

-   Use facets

-   Make sure to deal with `NA`s

-   Describe what you observe in the graph

```{r}
met_avg[!is.na(elev_cat)] %>% 
     ggplot()+
     geom_violin(mapping=aes(x=1, y=dew.point, fill=region))
met_avg[!is.na(elev_cat)] %>% 
     ggplot()+
     geom_violin(mapping=aes(x=1, y=wind.sp, fill=region))
```

![](http://127.0.0.1:46607/graphics/1dfd1d0c-6a9a-4ff9-940d-3e08a0c3f41f.png)

***In this graph, east appears to have a higher dew point than the west while the west appears to have a longest consistent range.***

![](http://127.0.0.1:46607/graphics/21e106d0-599c-4730-861b-7de31437fb45.png)

***In this graph, wind speed, on average, appears to be higher in the west compared to the east while the east has a wider X range compared to the east.***

### **4. Use `geom_jitter` with `stat_smooth` to examine the association between dew point and wind speed by region**

-   Color points by region

-   Make sure to deal with `NA`s

-   Fit a linear regression line by region

-   Describe what you observe in the graph

```{r}
ggplot(met_avg, aes(x = dew.point, y = wind.sp, color = region)) +
          geom_jitter(alpha = 0.6, width = 0.2) +
          stat_smooth(method = "lm", se = FALSE)

```

![](http://127.0.0.1:46607/graphics/06929ab9-2500-4cdb-a24a-58437d2b1866.png)

***The east appears to have a higher dew point while the west appears to have slightly higher wind speeds at its maximum and the lowest recorded point also belongs to the west.***

### **5. Use `geom_bar` to create barplots of the weather stations by elevation category colored by region**

-   Bars by elevation category using `position="dodge"`

-   Change colors from the default. Color by region using `scale_fill_brewer` see [this](http://rstudio-pubs-static.s3.amazonaws.com/5312_98fc1aba2d5740dd849a5ab797cc2c8d.html)

-   Create nice labels on the axes and add a title

-   Describe what you observe in the graph

-   Make sure to deal with `NA` values

```{r}
met_avg[!is.na(region) & region != "clear"] %>%
     ggplot() + 
     geom_bar(mapping = aes(x= elev_cat, fill = region), position = "dodge") +
     labs(
         title = "Bar Plot of Weatherstations by Elevation Category Colored by Region",
         x = "Weatherstation",  
         y = "Elevation Category"  
     )
```

![](http://127.0.0.1:46607/graphics/af78d683-1b52-4cee-953c-a65a4cdca4fb.png)

***In terms of elevation categories, in the high one, the west region seems to have a slight advantage over the east. While in the low elevation category, the east region has a massive advantage over the west region.***

### **6. Use `stat_summary` to examine mean dew point and wind speed by region with standard deviation error bars**

-   Make sure to remove `NA`s

-   Use `fun.data="mean_sdl"` in `stat_summary`

-   Add another layer of `stats_summary` but change the geom to `"errorbar"` (see the help).

-   Describe the graph and what you observe

-   Dew point is...

-   Wind speed is...

```{r}
ggplot(met_avg, aes(x=region, y=wind.sp)) +
  stat_summary(fun.data = "mean_sdl", geom = "point", size = 4) +
  stat_summary(fun.data = "mean_sdl", geom = "errorbar") +
  labs(title= "Mean wind speed by region with standard deviation error bars", x = "Region", y = "Wind Speed")
  
ggplot(met_avg, aes(x=region, y=dew.point)) +
    stat_summary(fun.data = "mean_sdl", geom = "point", size = 4) +
    stat_summary(fun.data = "mean_sdl", geom = "errorbar") +
    labs(title= "Mean dew point by region with standard deviation error bars", x = "Region", y = "Dew Point")  

```

![](http://127.0.0.1:46607/graphics/a535c3d8-2aca-4902-b241-96cd370b0d60.png)

***Wind speed is right between its SD error bars in both east and west regions with the west having a higher wind speed on average by approximately 25%.***

![](http://127.0.0.1:46607/graphics/81037ced-06d2-405f-922d-c3a302f98101.png)

***Dew point is right in the middle of its SD error bars in both east and west regions with the east having a higher dew point on average by almost double what the west averages.***

### **7. Make a map showing the spatial trend in relative humidity in the US**

-   Make sure to remove `NA`s

-   Use leaflet()

-   Make a color palette with custom colors

-   Use `addMarkers` to include the top 10 places in relative humidity (hint: this will be useful `rank(-rh) <= 10`)

-   Add a legend

-   Describe the trend in RH across the US

```{r}
library(leaflet)
met_avg2 <- met_avg[,.(rh = mean(rh,na.rm=TRUE), lat = mean(lat), lon = mean(lon)),  by=c("USAFID")]
met_avg2 <- met_avg2[!is.na(rh)]
rh.pal <- colorNumeric(c('lightgreen','lightblue','darkred'), domain=met_avg2$rh)
rh.pal

rhmap <- leaflet(met_avg2) %>% 
  addProviderTiles('CartoDB.Positron') %>% 
  addCircles(
    lat = ~lat, lng=~lon,
    label = ~paste0(round(rh,2), ' C'), color = ~ rh.pal(rh),
    opacity = 1, fillOpacity = 1, radius = 500
    ) %>%
  addLegend('bottomleft', pal=rh.pal, values=met_avg2$rh,
          title='Relative Humidity, C', opacity=1)

rhmap
```

![](images/Rplot.png)

***It appears the most relatively humid places are along coastlines and the eastern part of the United States while the Rocky Mountain region and a majority of the western half of the US has much cooler humidity levels.***

### **8. Use a ggplot extension**

-   Pick an extension (except cowplot) from [here](https://exts.ggplot2.tidyverse.org/gallery/) and make a plot of your choice using the met data (or met_avg)

-   Might want to try examples that come with the extension first (e.g. ggtech, gganimate, ggforce)

```{r}
force <- ggplot(met_avg, aes(x = region, y = wind.sp)) +
     geom_point()
print(force)
```

![](http://127.0.0.1:46607/graphics/29ae2262-7ece-4306-bc35-837be9534814.png)
